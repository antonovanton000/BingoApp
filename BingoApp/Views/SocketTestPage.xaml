<Page x:Class="BingoApp.Views.SocketTestPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:BingoApp.Views"
      xmlns:cnt="clr-namespace:BingoApp.Controls"
      xmlns:vm="clr-namespace:BingoApp.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="900" d:DesignWidth="900"
      Background="{StaticResource GradientBackgroundBrush}"
      Title="FirstLaunchPage">
    <Page.DataContext>
        <vm:SocketTestViewModel/>
    </Page.DataContext>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=page}">
            <behaviors:InvokeCommandAction Command="{Binding AppearingCommand}" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Page.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Page.Triggers>
    <Grid>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="40,20">
            <Button Content="Connect" Command="{Binding ConnectCommand}" Margin="10,0"/>
            <Button Content="Start" Command="{Binding StartCommand}" Margin="10,0"/>
        </StackPanel>

        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="40,20">
            <TextBlock Text="Connected!" Foreground="White" Margin="0,0,0,0" Visibility="{Binding IsConnected, Converter={StaticResource BoolToVisConverter}}"/>
            <TextBlock Text="{Binding StartTimeSeconds, StringFormat='StartTimeSeconds: {0}'}" Foreground="White" Margin="0,20,0,0"/>
            <TextBlock Text="{Binding AfterRevealSeconds, StringFormat='AfterRevealSeconds: {0}'}" Foreground="White" Margin="0,20,0,0"/>
            <TextBlock Text="{Binding IsStartTimerStarted, StringFormat='IsStartTimerStarted: {0}'}" Foreground="White" Margin="0,20,0,0"/>
            <TextBlock Text="{Binding IsAfterRevealTimerStarted, StringFormat='IsAfterRevealTimerStarted: {0}'}" Foreground="White" Margin="0,20,0,0"/>
            <TextBlock Text="{Binding IsGameTimerStarted, StringFormat='IsGameTimerStarted: {0}'}" Foreground="White" Margin="0,20,0,0"/>
        </StackPanel>

        <TextBlock Text="{Binding TimerString}" Foreground="White" FontSize="80" Margin="40,60,0,0"
                   HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <Grid Background="Red" Height="550" Width="550">
            <Grid Background="Green" Visibility="{Binding IsStarted, Converter={StaticResource BoolToVisConverter}}">
                <TextBlock Text="STARTED!" FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
            </Grid>
            <Grid Background="Black" Visibility="{Binding IsRevealed, Converter={StaticResource NotBoolToVisibilityConverter}}">
                <TextBlock Text="Waiting for start" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
            </Grid>
        </Grid>


    </Grid>
</Page>
